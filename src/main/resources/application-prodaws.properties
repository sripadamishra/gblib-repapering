gblib.core.repapering.ocr.inputdir=.\analytics
gblib.core.repapering.ocr.outputdir=.\analytics
gblib.core.repapering.analytics.classify.outputdir=.\analytics
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://aa1pbmzxyqhwewy.cylxmqad0e74.us-east-1.rds.amazonaws.com:3306/ebdb
spring.datasource.username=root
spring.datasource.password=password1$
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
file.upload-dir=./analytics
## Contract Analytics-Generate metadata
gblib.core.repapering.text.analytics.metadatadir=./analytics
gblib.core.repapering.text.analytics.docmetadata.filename=.json
gblib.core.repapering.text.analytics.domaincontextmetadata.filename=_DOMAINMETADATA.JSON
gblib.core.repapering.file.storage=awss3
gblib.core.repapering.classifier.scheduler=
gblib.core.repapering.dataclassifyextractor.scheduler=
gblib.core.repapering.textsimilarity.scheduler=

amazonProperties.endpointUrl=https://s3.us-east-2.amazonaws.com
amazonProperties.accessKey=AKIA2JRNC55JDDMIKRRV
amazonProperties.secretKey=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
amazonProperties.scan.bucketName=gblibor-scan-bucket
amazonProperties.ocr.bucketName=gblibor-ocr-bucket
amazonProperties.metadata.bucketName=gblibor-metadata-bucket
amazonProperties.edit.bucketName=gblibor-edit-bucket
